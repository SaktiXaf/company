// Mixins - Apple Clone E-commerce
// ===============================

@import 'variables';

// Responsive breakpoints
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$breakpoint}";
  }
}

// Responsive utilities
@mixin mobile-only {
  @media (max-width: #{map-get($breakpoints, sm) - 1px}) {
    @content;
  }
}

@mixin tablet-up {
  @media (min-width: map-get($breakpoints, md)) {
    @content;
  }
}

@mixin desktop-up {
  @media (min-width: map-get($breakpoints, lg)) {
    @content;
  }
}

@mixin large-desktop-up {
  @media (min-width: map-get($breakpoints, xl)) {
    @content;
  }
}

// Container
@mixin container {
  width: 100%;
  padding-right: map-get($spacers, 4);
  padding-left: map-get($spacers, 4);
  margin-right: auto;
  margin-left: auto;

  @include respond-to(sm) {
    max-width: map-get($container-max-widths, sm);
  }

  @include respond-to(md) {
    max-width: map-get($container-max-widths, md);
  }

  @include respond-to(lg) {
    max-width: map-get($container-max-widths, lg);
  }

  @include respond-to(xl) {
    max-width: map-get($container-max-widths, xl);
  }

  @include respond-to(xxl) {
    max-width: map-get($container-max-widths, xxl);
  }
}

// Flexbox utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

// Button styles
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $btn-padding-y $btn-padding-x;
  font-family: $font-family-base;
  font-size: $btn-font-size;
  font-weight: $font-weight-medium;
  line-height: 1.5;
  text-align: center;
  text-decoration: none;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;
  border: $btn-border-width solid transparent;
  border-radius: $btn-border-radius;
  transition: all $transition-base;

  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba($primary, 0.25);
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@mixin button-primary {
  @include button-base;
  color: $white;
  background-color: $primary;
  border-color: $primary;

  &:hover:not(:disabled) {
    background-color: darken($primary, 5%);
    border-color: darken($primary, 5%);
    transform: translateY(-1px);
    box-shadow: $shadow-md;
  }

  &:active {
    transform: translateY(0);
    box-shadow: $shadow-sm;
  }
}

@mixin button-secondary {
  @include button-base;
  color: $text-primary;
  background-color: $white;
  border-color: $gray-300;

  &:hover:not(:disabled) {
    background-color: $gray-50;
    border-color: $gray-400;
  }
}

@mixin button-outline {
  @include button-base;
  color: $primary;
  background-color: transparent;
  border-color: $primary;

  &:hover:not(:disabled) {
    color: $white;
    background-color: $primary;
  }
}

// Card styles
@mixin card {
  background-color: $white;
  border-radius: $border-radius-lg;
  box-shadow: $shadow;
  overflow: hidden;
  transition: all $transition-base;
}

@mixin card-hover {
  &:hover {
    transform: translateY(-4px);
    box-shadow: $shadow-xl;
  }
}

// Product card specific
@mixin product-card {
  @include card;
  width: 100%;
  max-width: $product-card-width;
  
  .product-image {
    width: 100%;
    height: 250px;
    object-fit: cover;
    transition: transform $transition-base;
  }

  &:hover .product-image {
    transform: scale(1.05);
  }
}

// Form input styles
@mixin form-input {
  display: block;
  width: 100%;
  padding: $input-padding-y $input-padding-x;
  font-family: $font-family-base;
  font-size: $input-font-size;
  font-weight: $font-weight-normal;
  line-height: 1.5;
  color: $text-primary;
  background-color: $input-bg;
  background-image: none;
  border: $input-border-width solid $input-border-color;
  border-radius: $input-border-radius;
  transition: border-color $transition-fast, box-shadow $transition-fast;

  &:focus {
    color: $text-primary;
    background-color: $input-bg;
    border-color: $input-focus-border-color;
    outline: 0;
    box-shadow: 0 0 0 3px rgba($primary, 0.25);
  }

  &::placeholder {
    color: $text-muted;
    opacity: 1;
  }

  &:disabled {
    background-color: $gray-100;
    opacity: 1;
  }
}

// Typography mixins
@mixin heading-xl {
  font-family: $font-family-display;
  font-size: $font-size-5xl;
  font-weight: $font-weight-bold;
  line-height: $line-height-tight;
  color: $text-primary;

  @include mobile-only {
    font-size: $font-size-4xl;
  }
}

@mixin heading-lg {
  font-family: $font-family-display;
  font-size: $font-size-4xl;
  font-weight: $font-weight-bold;
  line-height: $line-height-tight;
  color: $text-primary;

  @include mobile-only {
    font-size: $font-size-3xl;
  }
}

@mixin heading-md {
  font-family: $font-family-display;
  font-size: $font-size-3xl;
  font-weight: $font-weight-semibold;
  line-height: $line-height-tight;
  color: $text-primary;

  @include mobile-only {
    font-size: $font-size-2xl;
  }
}

@mixin heading-sm {
  font-family: $font-family-display;
  font-size: $font-size-2xl;
  font-weight: $font-weight-semibold;
  line-height: $line-height-normal;
  color: $text-primary;

  @include mobile-only {
    font-size: $font-size-xl;
  }
}

@mixin body-lg {
  font-family: $font-family-base;
  font-size: $font-size-lg;
  font-weight: $font-weight-normal;
  line-height: $line-height-relaxed;
  color: $text-secondary;
}

@mixin body-text {
  font-family: $font-family-base;
  font-size: $font-size-base;
  font-weight: $font-weight-normal;
  line-height: $line-height-normal;
  color: $text-secondary;
}

// Animation mixins
@mixin fade-in {
  opacity: 0;
  animation: fadeIn $transition-slow ease-in-out forwards;
}

@mixin slide-up {
  transform: translateY(30px);
  opacity: 0;
  animation: slideUp $transition-slow ease-out forwards;
}

@mixin scale-in {
  transform: scale(0.9);
  opacity: 0;
  animation: scaleIn $transition-base ease-out forwards;
}

// Utility mixins
@mixin visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

@mixin clearfix {
  &::after {
    display: block;
    clear: both;
    content: "";
  }
}

@mixin aspect-ratio($width, $height) {
  position: relative;
  &::before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  > * {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }
}

// Spacing utilities generator
@mixin generate-spacing($property, $prefix) {
  @each $key, $value in $spacers {
    .#{$prefix}-#{$key} {
      #{$property}: $value !important;
    }
  }
}

// Text utilities
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Loading spinner
@mixin spinner($size: 24px, $border-width: 2px) {
  display: inline-block;
  width: $size;
  height: $size;
  border: $border-width solid rgba($primary, 0.2);
  border-radius: 50%;
  border-top-color: $primary;
  animation: spin 1s ease-in-out infinite;
}

// Keyframes
@keyframes fadeIn {
  to {
    opacity: 1;
  }
}

@keyframes slideUp {
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes scaleIn {
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}